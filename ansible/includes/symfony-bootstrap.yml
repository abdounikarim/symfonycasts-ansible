---
- name: Install Composer dependencies
  composer: 
    working_dir: "{{ symfony_root_dir }}"
    no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
  # when: code_changed
  tags:
    - deploy

- name: Fix var directory permissions
  file:
    path: "{{ symfony_var_dir }}"
    state: directory
    mode: 0777
    recurse: yes
  changed_when: false
  tags: 
    - permissions
    - deploy

- name: Set Symfony secret in parameters.yml
  lineinfile:
    dest: "{{ symfony_root_dir }}/app/config/parameters.yml"
    regexp: "^    secret:"
    line: "    secret: {{ symfony_secret }}"
  tags:
    - deploy

- name: Set Loggly token in parameters.yml
  lineinfile:
    dest: "{{ symfony_root_dir }}/app/config/parameters.yml"
    regexp: "^    loggly_token:"
    line: "    loggly_token: {{ loggly_token }}"
  tags:
    - deploy

- name: Create DB if not exists
  command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
  register: db_create_result
  changed_when: "db_create_result.stdout is not search('already exists. Skipped')"
  tags:
    - deploy

- name: Execute migrations
  command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
  register: db_migrations_result
  changed_when: "db_migrations_result.stdout is not search('No migrations to execute')"
  when: code_changed
  tags:
    - deploy

- name: Load data fixtures
  command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
  when: symfony_env != "prod"
  changed_when: false
  tags:
    - deploy

- name: Clear cache
  command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
  changed_when: false
  # when: code_changed
  tags:
    - deploy